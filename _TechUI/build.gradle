plugins {
    id 'java'
    id 'jacoco'
	id 'application'
	id 'com.github.johnrengelman.shadow' version '7.1.2'
}

application {
    mainClassName = 'tui.Main'
}

shadowJar {
    archiveClassifier.set('')
    mergeServiceFiles()
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Main-Class': 'tui.Main'
    }
	destinationDirectory = file("../binary")
}

tasks.compileJava.dependsOn(':_BL:shadowJar')
tasks.compileJava.dependsOn(':_DA:shadowJar')


version = ''

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'org.mockito:mockito-core:3.10.0'
    implementation 'org.mockito:mockito-junit-jupiter:5.5.0'

    implementation 'org.hibernate:hibernate-core:5.3.7.Final'
    implementation "org.hibernate:hibernate-java8:5.0.0.Final"
    implementation 'org.postgresql:postgresql:42.3.1'

    implementation 'javax.xml.bind:jaxb-api:2.3.1'

    implementation 'org.apache.logging.log4j:log4j-core:2.16.0'
    implementation 'log4j:log4j:1.2.17'

    implementation 'org.modelmapper:modelmapper:2.4.4'
	
	implementation project(':_DA')
	implementation project(':_BL')
}

run {
    standardInput = System.in
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
}

jar {
    enabled = false
}
